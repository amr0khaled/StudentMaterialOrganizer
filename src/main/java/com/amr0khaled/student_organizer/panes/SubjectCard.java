package com.amr0khaled.student_organizer.panes;
import com.amr0khaled.student_organizer.custom_ui.Colors;
import com.amr0khaled.student_organizer.custom_ui.RoundedBorder;
import java.beans.PropertyChangeListener;
import java.beans.PropertyChangeSupport;

/**
 *
 * @author rami3
 */
public class SubjectCard extends javax.swing.JPanel {

  /**
   * Creates new form SubjectCard
   */
  private boolean open = false;
  private PropertyChangeSupport pcs;
  public String OPEN = "open_subject";
  private int subjectHash = -1;
  public SubjectCard() {
    pcs = new PropertyChangeSupport(this);
    initComponents();
  }
  public String getTitle() {
    return subjectTitle.getText();
  }
  public void setTitle(String title) {
    subjectTitle.setText(title);
  }
  public int getSubjectHash() {
    return subjectHash;
  }
  public void setSubjectHash(int hash) {
    this.subjectHash = hash;
  }
  public void setOpen(boolean state) {
    boolean old = this.open;
    this.open = state;
    pcs.firePropertyChange(OPEN, old, state);
  }
  public boolean getOpen() {
    return open;
  }
  public void addPropertyChangeListener(String name, PropertyChangeListener listener) {
    pcs.addPropertyChangeListener(name, listener);
  }
  public void removePropertyChangeListener(String name, PropertyChangeListener listener) {
    pcs.removePropertyChangeListener(name, listener);
  }
  

  /**
   * This method is called from within the constructor to initialize the form.
   * WARNING: Do NOT modify this code. The content of this method is always
   * regenerated by the Form Editor.
   */
  @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {
    java.awt.GridBagConstraints gridBagConstraints;

    subjectImage = new javax.swing.JPanel();
    divider = new javax.swing.JPanel();
    subjectTitle = new javax.swing.JLabel();

    setBorder(new RoundedBorder(Colors.divider, 16, 1));
    setMaximumSize(new java.awt.Dimension(180, 256));
    setMinimumSize(new java.awt.Dimension(180, 256));
    setPreferredSize(new java.awt.Dimension(180, 256));
    setLayout(new java.awt.GridBagLayout());

    subjectImage.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
    subjectImage.setMaximumSize(new java.awt.Dimension(178, 216));
    subjectImage.setMinimumSize(new java.awt.Dimension(178, 216));
    subjectImage.setPreferredSize(new java.awt.Dimension(178, 216));

    javax.swing.GroupLayout subjectImageLayout = new javax.swing.GroupLayout(subjectImage);
    subjectImage.setLayout(subjectImageLayout);
    subjectImageLayout.setHorizontalGroup(
      subjectImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 178, Short.MAX_VALUE)
    );
    subjectImageLayout.setVerticalGroup(
      subjectImageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 216, Short.MAX_VALUE)
    );

    add(subjectImage, new java.awt.GridBagConstraints());

    divider.setBackground(new java.awt.Color(189, 189, 189));
    divider.setMaximumSize(new java.awt.Dimension(180, 2));
    divider.setMinimumSize(new java.awt.Dimension(180, 2));
    divider.setPreferredSize(new java.awt.Dimension(180, 2));

    javax.swing.GroupLayout dividerLayout = new javax.swing.GroupLayout(divider);
    divider.setLayout(dividerLayout);
    dividerLayout.setHorizontalGroup(
      dividerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 180, Short.MAX_VALUE)
    );
    dividerLayout.setVerticalGroup(
      dividerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
      .addGap(0, 2, Short.MAX_VALUE)
    );

    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 1;
    gridBagConstraints.gridwidth = java.awt.GridBagConstraints.RELATIVE;
    gridBagConstraints.anchor = java.awt.GridBagConstraints.LINE_END;
    gridBagConstraints.insets = new java.awt.Insets(2, 0, 2, 0);
    add(divider, gridBagConstraints);

    subjectTitle.setFont(new java.awt.Font("Poppins Light", 0, 16)); // NOI18N
    subjectTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
    subjectTitle.setMaximumSize(new java.awt.Dimension(170, 25));
    subjectTitle.setMinimumSize(new java.awt.Dimension(170, 25));
    subjectTitle.setPreferredSize(new java.awt.Dimension(170, 25));
    gridBagConstraints = new java.awt.GridBagConstraints();
    gridBagConstraints.gridx = 0;
    gridBagConstraints.gridy = 2;
    add(subjectTitle, gridBagConstraints);
  }// </editor-fold>//GEN-END:initComponents


  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JPanel divider;
  private javax.swing.JPanel subjectImage;
  private javax.swing.JLabel subjectTitle;
  // End of variables declaration//GEN-END:variables
}
